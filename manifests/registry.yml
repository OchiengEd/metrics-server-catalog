---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: registry-cert
  namespace: olmv1-system
spec:
  dnsNames:
    - registry.olmv1-system.svc
    - registry.olmv1-system.svc.cluster.local
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: olmv1-ca
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  secretName: registry-cert
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: registry
  name: registry
  namespace: olmv1-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: docker.io/library/registry:3.0.0
          env:
            - name: REGISTRY_HTTP_ADDR
              value: "0.0.0.0:8443"
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: "/certs/tls.crt"
            - name: REGISTRY_HTTP_TLS_KEY
              value: "/certs/tls.key"
            - name: OTEL_TRACES_EXPORTER
              value: "none"
          ports:
            - name: registry
              protocol: TCP
              containerPort: 8443
          securityContext:
            runAsUser: 999
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            seccompProfile:
              type: "RuntimeDefault"
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: blobs
              mountPath: /var/lib/registry/docker
            - name: certs
              mountPath: /certs
          resources: {}
      volumes:
        - name: blobs
          emptyDir: {}
        - name: certs
          secret:
            secretName: registry-cert
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: registry
  name: registry
  namespace: olmv1-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app: registry
status:
  loadBalancer: {}
